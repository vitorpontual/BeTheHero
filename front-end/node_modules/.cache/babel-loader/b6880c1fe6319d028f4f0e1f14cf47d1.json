{"ast":null,"code":"var _jsxFileName = \"/home/vpguedes/Documents/Projetos/gohero/src/hooks/useCase.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { createContext, useContext, useEffect, useState } from \"react\";\nimport { api } from \"../services/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CaseContext = /*#__PURE__*/createContext({});\nexport function CaseProvider({\n  children\n}) {\n  _s();\n\n  const [incidents, setIncidents] = useState([]);\n  const ongId = localStorage.getItem('ongId');\n  useEffect(() => {\n    api.get('profile', {\n      headers: {\n        Authorization: ongId\n      }\n    }).then(response => {\n      setIncidents(response.data);\n    });\n  }, [ongId]);\n\n  const handlerDelete = async id => {\n    try {\n      await api.delete(`incident/${id}`, {\n        headers: {\n          Authorizatoin: ongId\n        }\n      });\n      const incidentRemove = incidents.filter(incident => incident.id !== id);\n      setIncidents(incidentRemove);\n    } catch (error) {\n      alert('Error ao deleter o caso, tente novamente');\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(CaseContext.Provider, {\n    value: {\n      incidents,\n      handlerDelete\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CaseProvider, \"xapd8YmFJVN5W+0NHEYznmGWvas=\");\n\n_c = CaseProvider;\nexport function useCase() {\n  _s2();\n\n  const context = useContext(CaseContext);\n  return context;\n}\n\n_s2(useCase, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n\nvar _c;\n\n$RefreshReg$(_c, \"CaseProvider\");","map":{"version":3,"sources":["/home/vpguedes/Documents/Projetos/gohero/src/hooks/useCase.tsx"],"names":["createContext","useContext","useEffect","useState","api","CaseContext","CaseProvider","children","incidents","setIncidents","ongId","localStorage","getItem","get","headers","Authorization","then","response","data","handlerDelete","id","delete","Authorizatoin","incidentRemove","filter","incident","error","alert","useCase","context"],"mappings":";;;;AAAA,SAASA,aAAT,EAAmCC,UAAnC,EAA+CC,SAA/C,EAA0DC,QAA1D,QAA0E,OAA1E;AACA,SAASC,GAAT,QAAoB,iBAApB;;AAoBA,MAAMC,WAAW,gBAAGL,aAAa,CAAkB,EAAlB,CAAjC;AAEA,OAAO,SAASM,YAAT,CAAsB;AAACC,EAAAA;AAAD,CAAtB,EAAoD;AAAA;;AACzD,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BN,QAAQ,CAAc,EAAd,CAA1C;AAEA,QAAMO,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd;AAEAV,EAAAA,SAAS,CAAC,MAAM;AACdE,IAAAA,GAAG,CAACS,GAAJ,CAAQ,SAAR,EAAmB;AACfC,MAAAA,OAAO,EAAE;AACLC,QAAAA,aAAa,EAAEL;AADV;AADM,KAAnB,EAIGM,IAJH,CAIQC,QAAQ,IAAI;AAChBR,MAAAA,YAAY,CAACQ,QAAQ,CAACC,IAAV,CAAZ;AACH,KAND;AAOH,GARU,EAQR,CAACR,KAAD,CARQ,CAAT;;AAUA,QAAMS,aAAa,GAAG,MAAOC,EAAP,IAAsB;AAC1C,QAAG;AACD,YAAMhB,GAAG,CAACiB,MAAJ,CAAY,YAAWD,EAAG,EAA1B,EAA6B;AACjCN,QAAAA,OAAO,EAAE;AACPQ,UAAAA,aAAa,EAAEZ;AADR;AADwB,OAA7B,CAAN;AAKA,YAAMa,cAAc,GAAGf,SAAS,CAACgB,MAAV,CAAiBC,QAAQ,IAAIA,QAAQ,CAACL,EAAT,KAAgBA,EAA7C,CAAvB;AAEAX,MAAAA,YAAY,CAACc,cAAD,CAAZ;AACD,KATD,CASC,OAAOG,KAAP,EAAc;AACbC,MAAAA,KAAK,CAAC,0CAAD,CAAL;AACD;AACF,GAbD;;AAeA,sBACE,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE;AAACnB,MAAAA,SAAD;AAAYW,MAAAA;AAAZ,KAA7B;AAAA,cAA0DZ;AAA1D;AAAA;AAAA;AAAA;AAAA,UADF;AAGD;;GAjCeD,Y;;KAAAA,Y;AAmChB,OAAO,SAASsB,OAAT,GAAoC;AAAA;;AACzC,QAAMC,OAAO,GAAG5B,UAAU,CAACI,WAAD,CAA1B;AAEA,SAAOwB,OAAP;AACD;;IAJeD,O","sourcesContent":["import { createContext, ReactNode, useContext, useEffect, useState } from \"react\";\nimport { api } from \"../services/api\";\n\n\ninterface CaseProviderProps {\n  children: ReactNode;\n}\n\ninterface Incidents {\n  id: string;\n  title: string;\n  description: string;\n  value: string;\n\n}\n\ninterface CaseContextData{\n  incidents: Incidents[];\n  handlerDelete: (id: string) => void;\n}\n\nconst CaseContext = createContext<CaseContextData>({} as CaseContextData);\n\nexport function CaseProvider({children}: CaseProviderProps){\n  const [incidents, setIncidents] = useState<Incidents[]>([])\n\n  const ongId = localStorage.getItem('ongId')\n\n  useEffect(() => {\n    api.get('profile', {\n        headers: {\n            Authorization: ongId\n        }\n    }).then(response => {\n        setIncidents(response.data);\n    });\n}, [ongId]);\n\n  const handlerDelete = async (id: string) => {\n    try{\n      await api.delete(`incident/${id}`, {\n        headers: {\n          Authorizatoin: ongId\n        }\n      })\n      const incidentRemove = incidents.filter(incident => incident.id !== id)\n\n      setIncidents(incidentRemove)\n    }catch (error) {\n      alert('Error ao deleter o caso, tente novamente')\n    }\n  }\n\n  return(\n    <CaseContext.Provider value={{incidents, handlerDelete}}>{children}</CaseContext.Provider>\n  )\n}\n\nexport function useCase(): CaseContextData {\n  const context = useContext(CaseContext);\n\n  return context\n}"]},"metadata":{},"sourceType":"module"}